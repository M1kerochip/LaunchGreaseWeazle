<?xml version="1.0"?>
<doc>
<assembly>
<name>
RunGreaseWeazel
</name>
</assembly>
<members>
<member name="T:RunGreaseWeazel.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:RunGreaseWeazel.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:RunGreaseWeazel.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="M:RunGreaseWeazel.frmMain.CreateFileName(System.Boolean)">
 <summary>
 Create a filename from the attributes onscreen. (Including checking if file exists, if necessary)
 </summary>
 <param name="CheckExists">Check to see if the file exists on the disk. If so, append an integer to prevent GreaseSeazle from overwriting.</param>
 <returns>Filename as a string.</returns>
</member>
<member name="M:RunGreaseWeazel.frmMain.CallGreaseWeazel(System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Char)">
 <summary>
 Calls python.exe to run the gw.py script
 </summary>
 <param name="PythonEXE">Path to the python.exe. Python install folder must be in PATH variable.</param>
 <param name="gwLoc">Path to gw.py</param>
 <param name="ReadFromGW">Set to true to read to disk image, false writes disk image.</param>
 <param name="UpdateGWFirmware">Set to true to update GreaseWeazle hardware. Must have jumper set on [DCLK] + [DCIO]</param>
 <param name="fName">Path to file to read/write</param>
 <param name="ComPort">COM port to talk to GreaseWeazle hardware on. v0.11+ supports 'auto'.</param>
 <param name="ResetGW">Reset the Greaseweazle device to power-on settings: Motors off, drives deselected, power-on pin levels And delay values</param>
 <param name="DoubleStep"></param>
 <param name="SetPinLevel">If true, change the value of the pin with PinToSet and PinLevel</param>
 <param name="PinToSet">The pin number (on the back of the floppy drive) to change value</param>
 <param name="PinLevel">(L)ow 0v, or (H)igh 5v</param>
 <returns></returns>
</member>
</members>
</doc>
